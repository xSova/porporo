
|00 @System &vector $2 &expansion $2 &wst $1 &rst $1 &metadata $2 &r $2 &g $2 &b $2 &debug $1 &state $1
|10 @Console &vector $2 &read $1 &pad $4 &type $1 &write $1 &error $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1
|90 @Mouse &vector $2 &x $2 &y $2 &state $1 &chord $1 &pad $4 &scrolly &scrolly-hb $1 &scrolly-lb $1
|a0 @File &vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2

|0000

	@hexadecimal $1
	@ptr $2

|0100

@on-reset ( -> )
	;meta #06 DEO2
	( | theme )
	#f00f .System/r DEO2
	#f006 .System/g DEO2
	#f002 .System/b DEO2
	<load-theme>
	( | size )
	#0190 .Screen/width DEO2
	#0028 .Screen/height DEO2
	<redraw>
	;on-mouse .Mouse/vector DEO2
	;on-console .Console/vector DEO2
	;on-screen .Screen/vector DEO2
	#0000 .ptr STZ2
	BRK

@meta $1
	( name ) "Log(Porporo) 0a
	( desc ) "Log 20 "Viewer 0a
	( auth ) "By 20 "Devine 20 "Lu 20 "Linvega 0a
	( date ) "7 20 "Dec 20 "2023 $1
	( exts ) 00

@on-console ( -> )
	.Console/read DEI .Console/type DEI append #01 ;on-screen/reqdraw STA
	BRK

@append ( byte type -- )
	#00 ;mem/type .ptr LDZ2 STH2k ADD2 STA2
	#00 ;mem/data STH2kr ADD2 STA2
	STH2r INC2 .ptr STZ2
	JMP2r

@on-screen ( -> )
	[ LIT &reqdraw $1 ] DUP ?{ POP BRK }
	DUP #01 NEQ ?{ <redraw> }
	#01 SUB ,&reqdraw STR
	BRK

@on-mouse ( -> )
	[ LIT2 00 -Mouse/state ] DEI NEQ #41 ADD ;cursor-icn <update-cursor>
	[ LIT &last $1 ] .Mouse/state DEI #00 NEQ DUP ,&last STR
	DUP2 #0100 NEQ2 ?{ #08 ;on-screen/reqdraw STA }
	POP2 .Mouse/state DEI ?{ BRK }
	.Mouse/x DEI2 #0010 LTH2 ?on-touch-sidebar
	BRK

@on-touch-sidebar ( -> )
	.Mouse/y DEI2 #04 SFT2 NIP DUP #00 NEQ ?{ do-clear }
	POP #00 .Mouse/state DEO
	BRK

(
@|core )

@do-clear ( -- )
	.Mouse/state DEI #02 LTH ?{
		.hexadecimal LDZ #00 EQU .hexadecimal STZ }
	#0000 ;mem/data STA2
	#0000 .Screen/x DEO2
	#0000 .Screen/y DEO2
	#04 !<draw-icon>

@<redraw> ( -- )
	.Screen/height DEI2 #04 SFT2 NIP ;mem/data count-lines EQUk ?{
		( min ) #03 GTHk [ JMP SWP POP ]
		( scale ) #00 SWP #40 SFT2 #0008 ADD2 .Screen/height DEO2
		POP }
	POP2
	( | clear )
	#0014 .Screen/x DEO2
	#0000 .Screen/y DEO2
	[ LIT2 80 -Screen/pixel ] DEO
	<draw-sidebar>
	;mem/data .hexadecimal LDZ ?<draw-binary>
	( >> )

@<draw-text> ( str* -- )
	#0014 .Screen/x DEO2
	#0004 .Screen/y DEO2
	#15 .Screen/auto DEO
	&w ( -- )
		LDAk ?{ POP2 JMP2r }
		( | handle wrap )
		LDAk #20 GTH ?{
			INC2k word-fits ?{ <draw-lb>
				!&res }
			}
		LDAk #0a NEQ ?{ <draw-lb>
			!&res }
		( ) LDAk <draw-char>
		&res INC2 !&w

@<draw-binary> ( str* -- )
	#0014 .Screen/x DEO2
	#0004 .Screen/y DEO2
	#15 .Screen/auto DEO
	[ LITr 00 ]
	&w ( -- )
		LDAk <draw-byte>
		.Screen/x DEI2k #0008 ADD2 ROT DEO2
		INCr STHkr #0f AND ?{ <draw-lb> }
		INC2 LDAk ?&w
	POP2 JMP2r
	JMP2r

@<draw-byte> ( byte -- )
	DUP #04 SFT <draw-hex>

@<draw-hex> ( byte -- )
	#0f AND DUP #09 GTH #07 MUL ADD #30 ADD

@<draw-char> ( char -- )
	get-glyph .Screen/addr DEO2
	[ LIT2 &color 01 -Screen/sprite ] DEO
	JMP2r

@get-glyph ( char -- addr* )
	DUP #0a EQU ?&blank
	DUP #09 EQU ?&blank
	DUP #20 LTH ?&unknown
	DUP #7e GTH ?&unknown
	#20 SUB #00 SWP #40 SFT2 ;font-icn ADD2 JMP2r
	&unknown POP ;halftone-icn JMP2r
	&blank POP ;blank-icn JMP2r

@count-lines ( buf* -- lines )
	.hexadecimal LDZ ?&hex
	[ LITr 00 ]
	&w ( -- )
		LDAk #20 GTH ?{
			INC2k word-fits ?{ INCr !&res }
			}
		LDAk #0a NEQ ?{ INCr !&res }
		&res INC2 LDAk ?&w
	POP2 STHr INC JMP2r
	&hex ;mem/data scap/ ;mem/data SUB2 #04 SFT2 NIP INC JMP2r

@word-fits ( str* -- f )
	.Screen/x DEI2 #0008 ADD2 STH2
	&w ( -- )
		STH2kr .Screen/width DEI2 GTH2 ?&fail
		LDAk #20 GTH ?{
			POP2 POP2r #01 JMP2r }
		[ LIT2r 0008 ADD2r ] INC2 !&w
	JMP2r
	&fail POP2 POP2r #00 JMP2r

@<draw-lb> ( -- )
	.Screen/y DEI2k #0010 ADD2 ROT DEO2
	#0014 .Screen/x DEO2
	JMP2r

@<draw-sidebar> ( -- )
	#0000 DUP2 .Screen/x DEO2
	.Screen/y DEO2
	( | fill )
	#12 .Screen/auto DEO
	;halftone-icn .Screen/addr DEO2
	#00 .Screen/height DEI2 #03 SFT2 NIP SUB
	&times ( -- )
		[ LIT2 01 -Screen/sprite ] DEO
		INC DUP ?&times
	POP
	( | icon )
	#0000 .Screen/x DEO2
	#0000 .Screen/y DEO2
	#01 <draw-icon>
	JMP2r

@<draw-icon> ( color -- )
	#16 .Screen/auto DEO
	;ascii-icn #00 .hexadecimal LDZ #50 SFT2 ADD2 .Screen/addr DEO2
	.Screen/sprite DEOk DEO
	JMP2r

@<update-cursor> ( color addr* -- )
	[ LIT2 00 -Screen/auto ] DEO
	;fill-icn .Screen/addr DEO2
	#40 <draw-cursor>
	.Mouse/x DEI2 ,<draw-cursor>/x STR2
	.Mouse/y DEI2 ,<draw-cursor>/y STR2
	.Screen/addr DEO2

@<draw-cursor> ( color -- )
	[ LIT2 &x $2 ] .Screen/x DEO2
	[ LIT2 &y $2 ] .Screen/y DEO2
	.Screen/sprite DEO
	JMP2r

(
@|stdlib )

@scap ( str* -- end* )
	&w ( -- )
		INC2 & LDAk ?&w
	JMP2r

@<pword> ( str* -- )
	&w ( -- )
		LDAk #18 DEO
		INC2 LDAk #20 GTH ?&w
	POP2 JMP2r

(
@|theme )

@<load-theme> ( -- )
	;&path .File/name DEO2
	#0002 .File/length DEO2
	[ LIT2 -System/debug -System/r ]
	&l ( -- )
		;&buf .File/read DEO2
		.File/success DEI2 #0000 EQU2 ?{
			STHk [ LIT2 &buf $2 ] STHr DEO2
			INC INC NEQk ?&l }
	POP2 JMP2r
	&path ".theme $1

(
@|assets )

@cursor-icn [ 80c0 e0f0 f8e0 1000 ]

@fill-icn [ ffff ffff ffff ffff ]

@blank-icn [ $10 ]

@halftone-icn [
	aa55 aa55 aa55 aa55 aa55 aa55 aa55 aa55 ]

@ascii-icn [
	aa55 805f 9051 9357 aa55 02f9 0a89 cae9
	9753 9150 9f40 aa55 eac9 8a09 fa01 aa55 ]

@hex-icn [
	aa55 805f 9057 9455 aa55 02f9 0ae9 2aa9
	9554 9750 9f40 aa55 aa29 ea09 fa01 aa55 ]

~src/utils/log.assets.tal

